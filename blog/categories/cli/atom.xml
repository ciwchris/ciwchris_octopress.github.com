<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: cli | Notes to Self]]></title>
  <link href="http://ciwchris.github.com/blog/categories/cli/atom.xml" rel="self"/>
  <link href="http://ciwchris.github.com/"/>
  <updated>2013-09-14T19:31:50-07:00</updated>
  <id>http://ciwchris.github.com/</id>
  <author>
    <name><![CDATA[Chris]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Bash Shell Basics]]></title>
    <link href="http://ciwchris.github.com/blog/2013/09/14/bash-shell-basics/"/>
    <updated>2013-09-14T18:53:00-07:00</updated>
    <id>http://ciwchris.github.com/blog/2013/09/14/bash-shell-basics</id>
    <content type="html"><![CDATA[<p>Notes from the Pluralsight course <a href="http://pluralsight.com/training/Courses/TableOfContents/introduction-bash-shell-linux-mac-os">Introduction to the Bash Shell on Mac OS and Linux</a></p>

<h2>Braces</h2>

<p><code>bash
ls file?{mine,yours}.{txt,png}
</code></p>

<h2>Commands</h2>

<p><code>bash
grep 1978 oscars.tsv | sort &gt; 1978_films.txt
cut -f 3 oscars.tsv | grep 4 | wc -l
</code></p>

<p><code>bash Sort second column as numbers in reverse order
sort -rnk2 math_grades
</code></p>

<p><code>bash Unique entries with their count
sort math_attendance | uniq -c | sort -nr
</code></p>

<p><code>bash Find the largest file in the directory
ls -lS | head -n 2 | tail -n 1
ls -lrS | tail -n 2 # Better way
</code></p>

<p><code>bash Don't exit but update as new entries come in
tail -f auth.log
</code></p>

<p><code>bash Number of files in a directory
ls -a | wc -l
</code></p>

<p><code>bash Search for bruce, case insensitive, in a set of files
grep -i bruce *grades
</code></p>

<p><code>bash Filter out using an extended regex before working with other content
grep -Ev "^$|lecture" math_attendance | sort | uniq -c | sort -nr
</code></p>

<p><code>bash Search for txt files with curious in them
find . -name '*.txt' -exec grep -l curious {} \;
</code></p>

<p><code>bash Change uppercase 'S' to lowercase 's'
cat physics_grades | tr S s
tr S s &lt; physics_grades # More efficient method
</code></p>

<p><code>bash Change from tab separated to semicolon separated
tr \\t \; &lt; oscars.tsv &gt; oscars.csv
</code></p>

<p><code>bash Using sed
sed 's/something/something new/g' one.txt &gt; two.txt
</code></p>

<p><code>bash Combine files using columns (not append)
paste *grades
join *grades # Using keys
</code></p>

<h2>Command Substitution</h2>

<p><code>bash
echo "hello `whoami`" #old form
echo "Buy milk" &gt; "notes$(date).txt"
</code></p>

<h2>Copy / Paste</h2>

<p>Select text and paste with middle mouse click</p>

<h2>Movement keys</h2>

<ul>
<li>ctrl-a: start of line</li>
<li>ctrl-e: end of line</li>
<li>ctrl-f: forward 1 char</li>
<li>ctrl-b: backward 1 char</li>
<li>alt-f: forward 1 word</li>
<li>alt-b: backward 1 word</li>
<li>ctrl-d: delete 1 char</li>
<li>ctrl-h: delete 1 char backward</li>
<li>alt-d: delete 1 word</li>
<li>ctrl-w: delete 1 word backward</li>
<li>ctrl-k: delete rest of line</li>
<li>ctrl-u: delete from start of line</li>
<li>ctrl-r: search back in history</li>
</ul>


<h2>Processes</h2>

<ul>
<li>C-z: stop and return to a command prompt

<ul>
<li>fg or bg to start the process again</li>
<li>or use the job id: fg %1</li>
</ul>
</li>
<li>jobs: to list the running jobs</li>
<li>kill %1: kill job 1</li>
<li>or by process id

<ul>
<li>ps -ef: list all processes and show the owner</li>
<li>kill 1234</li>
</ul>
</li>
</ul>


<h2>Customization</h2>

<ul>
<li>alias: view aliases</li>
<li>\ls: run normal command, not the alias for it</li>
<li>.bashrc: executed for non-login shells</li>
<li>.profile or .bash_profile: executed for login shells</li>
<li>echo $PS1: reading an environment variable</li>
<li>PS1="\h:\W /u": set an environment variable</li>
<li>env: list all environment variables</li>
<li>EDITOR=vim: set the editor</li>
<li>export EDITOR: to make it visible

<ul>
<li>or export EDITOR=vim</li>
</ul>
</li>
<li>chsh: change shell

<ul>
<li>\bin\zsh: change to using zsh</li>
</ul>
</li>
<li>echo $SHELL: view current shell</li>
</ul>

]]></content>
  </entry>
  
</feed>
